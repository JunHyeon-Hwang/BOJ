
"""
문제
무한 수열 A는 다음과 같다.

A0 = 1
Ai = A⌊i//P⌋ + A⌊i//Q⌋ (i ≥ 1)
N, P와 Q가 주어질 때, AN을 구하는 프로그램을 작성하시오.

입력
첫째 줄에 3개의 정수 N, P, Q가 주어진다.

출력
첫째 줄에 AN을 출력한다.

제한
0 ≤ N ≤ 1012
2 ≤ P, Q ≤ 109


Ai = Ai//p + Ai//Q
7 2 3

A0 = 1
A1 = A1//2 + A1//3 = 1 + 1 = 2
A2 = A2//2 + A2//3 = 2 + 1 = 3
A3 = A3//2 + A3//3 = 2 + 2 = 4
A4 = A4//2 + A4//3 = 3 + 2 = 5
A5 = A5//2 + A5//3 = 3 + 2 = 5
A6 = A6//2 + A6//3 = 4 + 3 = 7
A7 = A7//2 + A7//3 = 4 + 3 = 7
A8 = A8//2 + A8//3 = 5 + 3 = 8
A9 = A9//2 + A9//3 = 5 + 4 = 9
A10 = A10//2 + A10//3 = 5 + 4 = 9
A11 = A11//2 + A11//3 = 5 + 4 = 9
A12 = A12//2 + A12//3 = 7 + 5 = 12
A13 = A13//2 + A13//3 = 7 + 5 = 12
A14 = A14//2 + A14//3 = 7 + 5 = 12
A15 = A15//2 + A15//3 = 7 + 5 = 12

=========================================================================================================
DP로 해결 가능하지 않을까 - list를 활용한 dp는 메모리 초과발생한다.
다른 접근이 필요하다.
list 접근에서 dictionary 접근으로 변경한다.
또한, recursion으로 접근한다.
"""
from collections import defaultdict
N,P,Q = map(int, input().split())
d = defaultdict(int)
d[0] = 1
def recur(N):
    if d[N] != 0:
        return d[N]
    d[N] = recur(N//P) + recur(N//Q)
    return d[N]
out = recur(N)
print(out)