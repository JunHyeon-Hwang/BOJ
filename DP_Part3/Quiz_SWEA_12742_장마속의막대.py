"""
문제 출처 : https://swexpertacademy.com/main/solvingProblem/solvingProblem.do
※ SW expert 아카데미의 문제를 무단 복제하는 것을 금지합니다.

  2차원 좌표공간 세상에 1만개의 막대가 있다. 이 중 x (1 ≤ x ≤ 10,000, x는 정수)번째 막대는 두 점 (x, 0)과 (x, 1 + 2 + … + x)를 잇는 선분으로 생각할 수 있다.
  여름이 되자 장마가 와서 2차원 좌표공간 세상에서 y < K영역 (단, K는 양의 정수)을 볼 수 없게 되었다. 
  당신은 장마로 인해 발생한 피해량을 측정하기 위해 K의 값을 알고자 한다. 당신은 이를 위해 정보원을 고용하여 다음과 같은 정보를 얻었다.
  • 인접한 (즉, x좌표가 1 차이 나는) 두 막대가 보였고, 그 중 짧은 것의 보이는 길이는 a, 긴 것의 보이는 길이는 b였다.
  이를 활용하여 K를 알아내는 프로그램을 작성하라.

[입력]
  첫 번째 줄에 테스트 케이스의 수 T가 주어진다.
  각 테스트 케이스는 한 줄에 하나씩 주어지며, 각 줄에는 두 개의 정수 a, b(1 ≤ a < b ≤ 50005000 = ∑i, i는 1부터 10000)가 공백 하나를 사이로 두고 순서대로 주어진다. 
  입력에 모순이 없음(즉, K가 유일하게 존재함)이 보장된다.

[출력]
  각 테스트 케이스마다, K의 값을 한 줄에 하나씩 순서대로 출력한다.

=====================================================================================================================================================================

Test case에서 바로바로 출력하는 것은 Buffer로 인해 시간초과가 발생한다. 따라서 정답을 모아두었다가
마지막에 한 번에 출력해야만 한다.
"""

dp = [0] * (10001)
for i in range(1, 10001):
    dp[i] = dp[i-1] + i
T = int(input())
sol = []
for t in range(1, T+1):
    a, b = map(int, input().split())
    c = b - a
    sol.append(dp[c] - b)

for i, num in enumerate(sol):
    print("#{} {}".format(i+1, num))