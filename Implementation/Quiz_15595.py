"""
시간 제한	메모리 제한	제출	정답	맞은 사람	정답 비율
2 초 (추가 시간 없음)	512 MB	546	206	142	44.375%
문제
BOJ에서 정답 비율은 다음과 같은 공식을 통해서 계산한다.

정답 비율 = (문제를 맞은 사람의 수) / (문제를 맞은 사람의 수 + (문제를 맞은 각 사람이 그 문제를 맞기 전까지 틀린 횟수의 총 합)) × 100

틀린 횟수는 "맞았습니다!!" 이외의 결과를 받은 횟수를 의미한다. 문제를 맞은 사람은 관리자의 제출은 제외하고 계산해야 한다. 만약, 맞은 사람이 관리자를 제외하고 없는 경우 (분모가 0), 정답 비율은 0이다.

어떤 문제의 제출 현황이 주어졌을 때, 정답 비율을 계산하는 프로그램을 작성하시오.

입력
첫째 줄에 어떤 문제의 총 제출 횟수 N(1 ≤ N ≤ 200,000)이 주어진다.

둘째 줄부터 N개의 줄에 각 제출의 정보가 제출 번호 순서대로 주어진다. 제출 정보는 총 7가지가 공백 하나로 구분되어져 있으며, 다음과 같은 순서로 주어진다.

채점 번호: 1보다 크거나 같고, 8,000,000보다 작거나 같은 정수. 채점 번호는 제출 순서이며, 두 개의 제출 정보가 같은 채점 번호를 갖는 경우는 없다.
유저 아이디: 길이가 20이하인 문자열, 알파벳 소문자와 대문자, 숫자, 밑 줄(_)로만 이루어져 있다. 유저 아이디가 "megalusion" 이면 관리자 아이디이다.
채점 결과: 4보다 크거나 같고, 11보다 작거나 같은 자연수이며, 다음과 같은 의미를 가진다.
4: 맞았습니다!!
5: 출력 형식이 잘못되었습니다
6: 틀렸습니다
7: 시간 초과
8: 메모리 초과
9: 출력 초과
10: 런타임 에러
11: 컴파일 에러
사용한 메모리: 0보다 크거나 같고, 3,000,000보다 작거나 같은 정수
수행 시간: 0보다 크거나 같고, 200,000보다 작거나 같은 정수
언어: 0보다 크거나 같고, 100보다 작거나 같은 정수
코드 길이: 1보다 크거나 같고, 524,288보다 작거나 같은 자연수
출력
첫째 줄에 문제의 정답 비율을 출력한다. 정답과의 절대/상대 오차는 10-9까지 허용한다.
==================================================================================================================================
주의 : 맞은적이 없다면 fail에 포함되지 않는다.
       이미 맞았다면 그 이후 제출은 카운팅하지 않는다.
"""
## Python3 는 Time Issue   
## Pypy3 정답
from collections import defaultdict
admin = "megalusion"
corr_ratio = 0
N = int(input())
correct = 0
fail = 0
info_d = defaultdict(list)
for _ in range(N):
    info = input().split()
    if info[1] == admin: 
        continue
    if info_d[info[1]] and info_d[info[1]][-1]==4: continue
    info_d[info[1]] += [int(info[2])]

for k, v in info_d.items():
    if v[-1] == 4 and len(v) >1:
        correct +=1
        fail += len(v)-1
    elif v[-1] == 4 and len(v) ==1:
        correct +=1
if correct == 0:
    print(0)
else:
    corr_ratio = (correct/(correct+fail)) *100
    print(round(corr_ratio,20))